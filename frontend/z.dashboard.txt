 <!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Enhanced Stock AI Dashboard</title>
    <!-- Bootstrap CSS -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <!-- Chart.js -->
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <!-- Font Awesome -->
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
    <style>
        :root {
            --primary-gradient: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            --success-color: #4CAF50;
            --warning-color: #ff9800;
            --danger-color: #f44336;
            --info-color: #2196F3;
        }
        
        body {
            background: var(--primary-gradient);
            color: white;
            min-height: 100vh;
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
        }
        
        .card {
            background: rgba(255, 255, 255, 0.1);
            backdrop-filter: blur(10px);
            border: none;
            border-radius: 15px;
            transition: transform 0.3s ease, box-shadow 0.3s ease;
        }
        
        .card:hover {
            transform: translateY(-5px);
            box-shadow: 0 10px 30px rgba(0, 0, 0, 0.2);
        }
        
        .chart-container {
            position: relative;
            height: 400px;
            margin-bottom: 20px;
        }
        
        .refresh-info {
            font-size: 0.9rem;
            color: #6c757d;
        }
        
        .status-indicator {
            display: inline-block;
            width: 10px;
            height: 10px;
            background: var(--success-color);
            border-radius: 50%;
            animation: pulse 2s infinite;
            margin-right: 10px;
        }
        
        @keyframes pulse {
            0% { opacity: 1; transform: scale(1); }
            50% { opacity: 0.5; transform: scale(1.1); }
            100% { opacity: 1; transform: scale(1); }
        }
        
        .enhanced-badge {
            background: linear-gradient(45deg, #ff6b6b, #ee5a24);
            color: white;
            padding: 5px 10px;
            border-radius: 15px;
            font-size: 0.8em;
            font-weight: bold;
        }
        
        .data-source-badge {
            background: linear-gradient(45deg, #3742fa, #2f3542);
            color: white;
            padding: 3px 8px;
            border-radius: 10px;
            font-size: 0.7em;
            font-weight: bold;
        }
        
        .api-status {
            background: rgba(255,255,255,0.1);
            padding: 15px;
            border-radius: 10px;
            margin-bottom: 20px;
            font-size: 0.9em;
            border-left: 4px solid var(--success-color);
        }
        
        .table-dark {
            background: rgba(0, 0, 0, 0.2);
            border-radius: 10px;
            overflow: hidden;
        }
        
        .table-dark th {
            background: rgba(0, 0, 0, 0.3);
            border: none;
            font-weight: 600;
            padding: 15px;
        }
        
        .table-dark td {
            border-color: rgba(255, 255, 255, 0.1);
            padding: 12px 15px;
            vertical-align: middle;
        }
        
        .pagination .page-link {
            background: rgba(255, 255, 255, 0.1);
            border: none;
            color: white;
            margin: 0 3px;
            border-radius: 8px;
        }
        
        .pagination .page-item.active .page-link {
            background: rgba(76, 175, 80, 0.5);
        }
        
        .pagination .page-item.disabled .page-link {
            background: rgba(255, 255, 255, 0.05);
        }
        
        .btn-success {
            background: linear-gradient(45deg, var(--success-color), #45a049);
            border: none;
            border-radius: 8px;
            padding: 10px 20px;
            font-weight: 600;
        }
        
        .btn-success:hover {
            background: linear-gradient(45deg, #45a049, var(--success-color));
            transform: translateY(-2px);
        }
        
        .form-control {
            background: rgba(255, 255, 255, 0.1);
            border: 1px solid rgba(255, 255, 255, 0.2);
            color: white;
            border-radius: 8px;
            padding: 12px 15px;
        }
        
        .form-control:focus {
            background: rgba(255, 255, 255, 0.15);
            border-color: var(--success-color);
            box-shadow: 0 0 0 0.2rem rgba(76, 175, 80, 0.25);
            color: white;
        }
        
        .form-control::placeholder {
            color: rgba(255, 255, 255, 0.7);
        }
        
        .loading-overlay {
            position: absolute;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            background: rgba(0, 0, 0, 0.8);
            display: flex;
            justify-content: center;
            align-items: center;
            z-index: 1000;
            border-radius: 15px;
        }
        
        .spinner-border {
            width: 3rem;
            height: 3rem;
        }
        
        .signal-badge {
            padding: 4px 8px;
            border-radius: 12px;
            font-size: 0.75em;
            font-weight: bold;
        }
        
        .signal-buy {
            background: rgba(76, 175, 80, 0.2);
            color: #4CAF50;
            border: 1px solid rgba(76, 175, 80, 0.3);
        }
        
        .signal-sell {
            background: rgba(244, 67, 54, 0.2);
            color: #f44336;
            border: 1px solid rgba(244, 67, 54, 0.3);
        }
        
        .signal-hold {
            background: rgba(255, 152, 0, 0.2);
            color: #ff9800;
            border: 1px solid rgba(255, 152, 0, 0.3);
        }
        
        .stats-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
            gap: 15px;
            margin: 20px 0;
        }
        
        .stat-item {
            background: rgba(255, 255, 255, 0.05);
            padding: 15px;
            border-radius: 10px;
            text-align: center;
            border: 1px solid rgba(255, 255, 255, 0.1);
        }
        
        .stat-value {
            font-size: 1.8em;
            font-weight: bold;
            margin: 5px 0;
        }
        
        .stat-label {
            font-size: 0.9em;
            opacity: 0.8;
        }
        
        .tab-content {
            padding: 20px 0;
        }
        
        .nav-tabs .nav-link {
            color: rgba(255, 255, 255, 0.7);
            border: none;
            border-radius: 8px;
            margin-right: 5px;
        }
        
        .nav-tabs .nav-link.active {
            background: rgba(255, 255, 255, 0.1);
            color: white;
            border: none;
        }
        
        .alert-container {
            position: fixed;
            top: 20px;
            right: 20px;
            z-index: 1050;
            max-width: 350px;
        }
    </style>
</head>
<body>
    <!-- Alert Container -->
    <div class="alert-container" id="alertContainer"></div>

    <div class="container py-4">
        <!-- Header -->
        <div class="header text-center mb-4">
            <h1 class="mb-2">ü§ñ Enhanced Stock AI System <span class="enhanced-badge">SECURITY MASTER DB</span></h1>
            <p><span class="status-indicator"></span>Multi-Source Data ‚Ä¢ Real-Time Analysis ‚Ä¢ Local Caching</p>
            <p>üí∞ <strong>Development Cost: Under $150</strong> | üóÑÔ∏è <strong>Security Master Database Active</strong></p>
            <p>üìß jaysweb@proton.me | üîë API: DQ4I233C...</p>
            
            <div class="api-status">
                üìä <strong>Data Sources:</strong> 
                <span class="data-source-badge">Alpha Vantage</span>
                <span class="data-source-badge">Yahoo Finance</span>
                <span class="data-source-badge">Local Cache</span>
                <span class="data-source-badge">AI Analysis</span>
                <br>
                üîÑ <strong>API Status:</strong> <span id="apiStatus">Checking...</span>
                <br>
                üìà <strong>Last Update:</strong> <span id="lastUpdate">Loading...</span>
            </div>
        </div>

        <!-- Quick Stats -->
        <div class="stats-grid">
            <div class="stat-item">
                <div class="stat-value text-success" id="totalDecisions">0</div>
                <div class="stat-label">Total AI Decisions</div>
            </div>
            <div class="stat-item">
                <div class="stat-value text-success" id="buySignals">0</div>
                <div class="stat-label">Buy Signals</div>
            </div>
            <div class="stat-item">
                <div class="stat-value text-success" id="avgConfidence">0%</div>
                <div class="stat-label">Avg Confidence</div>
            </div>
            <div class="stat-item">
                <div class="stat-value text-info" id="totalStocks">0</div>
                <div class="stat-label">Stocks Tracked</div>
            </div>
            <div class="stat-item">
                <div class="stat-value text-warning" id="apiUsage">0/25</div>
                <div class="stat-label">API Usage Today</div>
            </div>
        </div>

        <!-- Navigation Tabs -->
        <ul class="nav nav-tabs mb-4" id="dashboardTabs" role="tablist">
            <li class="nav-item" role="presentation">
                <button class="nav-link active" id="analysis-tab" data-bs-toggle="tab" data-bs-target="#analysis" type="button" role="tab">üìà Analysis</button>
            </li>
            <li class="nav-item" role="presentation">
                <button class="nav-link" id="decisions-tab" data-bs-toggle="tab" data-bs-target="#decisions" type="button" role="tab">üéØ AI Decisions</button>
            </li>
            <li class="nav-item" role="presentation">
                <button class="nav-link" id="watchlist-tab" data-bs-toggle="tab" data-bs-target="#watchlist" type="button" role="tab">‚≠ê Watchlist</button>
            </li>
            <li class="nav-item" role="presentation">
                <button class="nav-link" id="alerts-tab" data-bs-toggle="tab" data-bs-target="#alerts" type="button" role="tab">üîî Alerts</button>
            </li>
        </ul>

        <!-- Tab Content -->
        <div class="tab-content" id="dashboardTabsContent">
            <!-- Analysis Tab -->
            <div class="tab-pane fade show active" id="analysis" role="tabpanel">
                <div class="card mb-4">
                    <div class="card-header d-flex justify-content-between align-items-center">
                        <h5 class="card-title mb-0">üìà <span id="chartTicker">AAPL</span> Closing Price Trend</h5>
                        <div class="refresh-info">Live data ‚Ä¢ Auto-refresh every 30 seconds</div>
                    </div>
                    <div class="card-body position-relative">
                        <div class="chart-container">
                            <canvas id="priceChart"></canvas>
                        </div>
                    </div>
                </div>
                
                <div class="card">
                    <div class="card-header">
                        <h5 class="card-title">üìä Stock Price Data</h5>
                        <div class="input-group mt-2">
                            <input type="text" id="tickerInput" class="form-control" placeholder="Enter ticker (e.g., AAPL, MSFT, TSLA)" value="AAPL">
                            <button class="btn btn-success" onclick="changeTicker()">
                                <i class="fas fa-search"></i> Analyze
                            </button>
                            <button class="btn btn-outline-light" onclick="runAiAnalysis()">
                                <i class="fas fa-brain"></i> AI Analysis
                            </button>
                        </div>
                    </div>
                    <div class="card-body">
                        <div class="table-responsive">
                            <table class="table table-dark table-striped table-hover">
                                <thead>
                                    <tr>
                                        <th>Date</th>
                                        <th>Open</th>
                                        <th>High</th>
                                        <th>Low</th>
                                        <th>Close</th>
                                        <th>Volume</th>
                                        <th>Change</th>
                                    </tr>
                                </thead>
                                <tbody id="stockDataBody">
                                    <tr>
                                        <td colspan="7" class="text-center">Loading data...</td>
                                    </tr>
                                </tbody>
                            </table>
                        </div>
                        
                        <nav aria-label="Page navigation">
                            <ul class="pagination justify-content-center" id="pagination">
                                <li class="page-item disabled">
                                    <a class="page-link" href="#">Previous</a>
                                </li>
                                <li class="page-item active">
                                    <a class="page-link" href="#">1</a>
                                </li>
                                <li class="page-item disabled">
                                    <a class="page-link" href="#">Next</a>
                                </li>
                            </ul>
                        </nav>
                    </div>
                </div>
            </div>

            <!-- AI Decisions Tab -->
            <div class="tab-pane fade" id="decisions" role="tabpanel">
                <div class="card">
                    <div class="card-header">
                        <h5 class="card-title">üéØ Recent AI Investment Decisions</h5>
                    </div>
                    <div class="card-body">
                        <div class="table-responsive">
                            <table class="table table-dark table-striped table-hover">
                                <thead>
                                    <tr>
                                        <th>Ticker</th>
                                        <th>Decision</th>
                                        <th>Confidence</th>
                                        <th>Score</th>
                                        <th>Expected Return</th>
                                        <th>Risk</th>
                                        <th>Timestamp</th>
                                    </tr>
                                </thead>
                                <tbody id="decisionsBody">
                                    <tr>
                                        <td colspan="7" class="text-center">Loading decisions...</td>
                                    </tr>
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Watchlist Tab -->
            <div class="tab-pane fade" id="watchlist" role="tabpanel">
                <div class="card">
                    <div class="card-header">
                        <h5 class="card-title">‚≠ê Your Watchlist</h5>
                    </div>
                    <div class="card-body">
                        <div class="table-responsive">
                            <table class="table table-dark table-striped table-hover">
                                <thead>
                                    <tr>
                                        <th>Ticker</th>
                                        <th>Name</th>
                                        <th>Current Price</th>
                                        <th>AI Signal</th>
                                        <th>Priority</th>
                                        <th>Actions</th>
                                    </tr>
                                </thead>
                                <tbody id="watchlistBody">
                                    <tr>
                                        <td colspan="6" class="text-center">Loading watchlist...</td>
                                    </tr>
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Alerts Tab -->
            <div class="tab-pane fade" id="alerts" role="tabpanel">
                <div class="card">
                    <div class="card-header">
                        <h5 class="card-title">üîî System Alerts & Notifications</h5>
                    </div>
                    <div class="card-body">
                        <div id="alertsBody">
                            <div class="alert alert-info">
                                <i class="fas fa-info-circle"></i> No active alerts
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- AI Analysis Modal -->
    <div class="modal fade" id="aiAnalysisModal" tabindex="-1" aria-hidden="true">
        <div class="modal-dialog modal-lg">
            <div class="modal-content bg-dark text-white">
                <div class="modal-header border-secondary">
                    <h5 class="modal-title">üß† AI Analysis Results</h5>
                    <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body" id="aiAnalysisResults">
                    <div class="text-center py-4">
                        <div class="spinner-border text-success" role="status">
                            <span class="visually-hidden">Loading...</span>
                        </div>
                        <p class="mt-3">Running AI analysis...</p>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Bootstrap JS Bundle with Popper -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    
    <script>
        // Configuration
        const API_BASE_URL = 'http://localhost:8000';
        const REFRESH_INTERVAL = 30000; // 30 seconds
        const ITEMS_PER_PAGE = 10;
        
        // Global variables
        let stockData = [];
        let currentPage = 1;
        let priceChart = null;
        let currentTicker = 'AAPL';
        let refreshIntervalId = null;
        
        // DOM elements
        const stockDataBody = document.getElementById('stockDataBody');
        const pagination = document.getElementById('pagination');
        const chartTicker = document.getElementById('chartTicker');
        
        // Initialize the page
        document.addEventListener('DOMContentLoaded', function() {
            initializePage();
            setupEventListeners();
        });
        
        function initializePage() {
            loadSystemStats();
            fetchStockData();
            loadAiDecisions();
            loadWatchlist();
            
            // Set up auto-refresh
            refreshIntervalId = setInterval(() => {
                fetchStockData();
                loadSystemStats();
            }, REFRESH_INTERVAL);
        }
        
        function setupEventListeners() {
            // Enter key in ticker input
            document.getElementById('tickerInput').addEventListener('keypress', function(e) {
                if (e.key === 'Enter') {
                    changeTicker();
                }
            });
            
            // Tab change events
            const tabEl = document.querySelector('a[data-bs-toggle="tab"]');
            tabEl.addEventListener('shown.bs.tab', function(event) {
                const target = event.target.getAttribute('data-bs-target');
                if (target === '#decisions') {
                    loadAiDecisions();
                } else if (target === '#watchlist') {
                    loadWatchlist();
                } else if (target === '#alerts') {
                    loadAlerts();
                }
            });
        }
        
        async function loadSystemStats() {
            try {
                const response = await fetch(`${API_BASE_URL}/api/stats`);
                if (!response.ok) throw new Error('Stats API error');
                
                const stats = await response.json();
                
                document.getElementById('totalDecisions').textContent = stats.total_decisions.toLocaleString();
                document.getElementById('buySignals').textContent = stats.buy_signals.toLocaleString();
                document.getElementById('avgConfidence').textContent = `${(stats.avg_confidence * 100).toFixed(1)}%`;
                document.getElementById('totalStocks').textContent = stats.total_companies.toLocaleString();
                document.getElementById('apiUsage').textContent = `${stats.api_usage_today}/25`;
                document.getElementById('lastUpdate').textContent = new Date(stats.last_update).toLocaleString();
                document.getElementById('apiStatus').innerHTML = `<span class="text-success">‚úì Active</span>`;
                
            } catch (error) {
                console.error('Error loading stats:', error);
                document.getElementById('apiStatus').innerHTML = `<span class="text-danger">‚úó Offline</span>`;
            }
        }
        
        // ... (all the other functions from previous implementation with enhancements)
        
        // Add these new functions for the additional tabs
        async function loadAiDecisions() {
            try {
                const response = await fetch(`${API_BASE_URL}/api/dashboard`);
                if (!response.ok) throw new Error('Decisions API error');
                
                const data = await response.json();
                const decisionsBody = document.getElementById('decisionsBody');
                
                if (data.decisions && data.decisions.length > 0) {
                    decisionsBody.innerHTML = data.decisions.map(decision => `
                        <tr>
                            <td><strong>${decision.ticker}</strong></td>
                            <td>
                                <span class="signal-badge ${decision.decision.includes('BUY') ? 'signal-buy' : decision.decision.includes('SELL') ? 'signal-sell' : 'signal-hold'}">
                                    ${decision.decision}
                                </span>
                            </td>
                            <td>${(decision.confidence * 100).toFixed(0)}%</td>
                            <td>${decision.ai_score}/100</td>
                            <td class="${decision.expected_return >= 0 ? 'text-success' : 'text-danger'}">
                                ${decision.expected_return >= 0 ? '+' : ''}${(decision.expected_return * 100).toFixed(1)}%
                            </td>
                            <td>
                                <span class="${decision.risk_level === 'LOW' ? 'text-success' : decision.risk_level === 'MEDIUM' ? 'text-warning' : 'text-danger'}">
                                    ${decision.risk_level}
                                </span>
                            </td>
                            <td>${new Date(decision.created_at).toLocaleDateString()}</td>
                        </tr>
                    `).join('');
                } else {
                    decisionsBody.innerHTML = '<tr><td colspan="7" class="text-center">No decisions found</td></tr>';
                }
                
            } catch (error) {
                console.error('Error loading decisions:', error);
                document.getElementById('decisionsBody').innerHTML = '<tr><td colspan="7" class="text-center text-danger">Error loading decisions</td></tr>';
            }
        }
        
        async function loadWatchlist() {
            try {
                const response = await fetch(`${API_BASE_URL}/api/dashboard`);
                if (!response.ok) throw new Error('Watchlist API error');
                
                const data = await response.json();
                const watchlistBody = document.getElementById('watchlistBody');
                
                if (data.watchlist && data.watchlist.length > 0) {
                    watchlistBody.innerHTML = data.watchlist.map(item => `
                        <tr>
                            <td><strong>${item.ticker}</strong></td>
                            <td>${item.name || 'N/A'}</td>
                            <td>${item.target_price ? '$' + item.target_price : 'N/A'}</td>
                            <td>
                                <span class="signal-badge signal-hold">
                                    PENDING
                                </span>
                            </td>
                            <td>${item.priority || 1}</td>
                            <td>
                                <button class="btn btn-sm btn-outline-success" onclick="analyzeStock('${item.ticker}')">
                                    <i class="fas fa-chart-line"></i>
                                </button>
                            </td>
                        </tr>
                    `).join('');
                } else {
                    watchlistBody.innerHTML = '<tr><td colspan="6" class="text-center">Watchlist is empty</td></tr>';
                }
                
            } catch (error) {
                console.error('Error loading watchlist:', error);
                document.getElementById('watchlistBody').innerHTML = '<tr><td colspan="6" class="text-center text-danger">Error loading watchlist</td></tr>';
            }
        }
        
        async function loadAlerts() {
            // Placeholder for alerts functionality
            document.getElementById('alertsBody').innerHTML = `
                <div class="alert alert-info">
                    <i class="fas fa-info-circle"></i> No critical alerts at this time
                </div>
                <div class="alert alert-warning">
                    <i class="fas fa-exclamation-triangle"></i> Database maintenance scheduled for 4:00 AM EST
                </div>
            `;
        }
        
        async function runAiAnalysis() {
            const ticker = document.getElementById('tickerInput').value.trim().toUpperCase();
            if (!ticker) {
                showAlert('Please enter a stock ticker', 'warning');
                return;
            }
            
            const modal = new bootstrap.Modal(document.getElementById('aiAnalysisModal'));
            modal.show();
            
            try {
                const response = await fetch(`${API_BASE_URL}/api/analyze/${ticker}`);
                if (!response.ok) throw new Error('AI Analysis API error');
                
                const result = await response.json();
                
                if (result.error) {
                    document.getElementById('aiAnalysisResults').innerHTML = `
                        <div class="alert alert-danger">
                            <i class="fas fa-exclamation-circle"></i> ${result.error}
                        </div>
                    `;
                    return;
                }
                
                document.getElementById('aiAnalysisResults').innerHTML = `
                    <div class="text-center mb-4">
                        <h4>${ticker} AI Analysis</h4>
                        <div class="display-4 ${result.decision.includes('BUY') ? 'text-success' : result.decision.includes('SELL') ? 'text-danger' : 'text-warning'}">
                            ${result.decision}
                        </div>
                    </div>
                    
                    <div class="row text-center mb-4">
                        <div class="col-md-3">
                            <div class="stat-value text-info">${result.ai_score}/100</div>
                            <div class="stat-label">AI Score</div>
                        </div>
                        <div class="col-md-3">
                            <div class="stat-value ${result.confidence > 0.7 ? 'text-success' : result.confidence > 0.5 ? 'text-warning' : 'text-danger'}">
                                ${(result.confidence * 100).toFixed(0)}%
                            </div>
                            <div class="stat-label">Confidence</div>
                        </div>
                        <div class="col-md-3">
                            <div class="stat-value ${result.expected_return >= 0 ? 'text-success' : 'text-danger'}">
                                ${result.expected_return >= 0 ? '+' : ''}${(result.expected_return * 100).toFixed(1)}%
                            </div>
                            <div class="stat-label">Expected Return</div>
                        </div>
                        <div class="col-md-3">
                            <div class="stat-value ${result.risk_level === 'LOW' ? 'text-success' : result.risk_level === 'MEDIUM' ? 'text-warning' : 'text-danger'}">
                                ${result.risk_level}
                            </div>
                            <div class="stat-label">Risk Level</div>
                        </div>
                    </div>
                    
                    <div class="alert ${result.risk_level === 'LOW' ? 'alert-success' : result.risk_level === 'MEDIUM' ? 'alert-warning' : 'alert-danger'}">
                        <strong>Signals:</strong><br>
                        ‚Ä¢ ${result.signals.volume}<br>
                        ‚Ä¢ ${result.signals.momentum}<br>
                        ‚Ä¢ ${result.signals.technical}
                    </div>
                    
                    ${result.risk_factors.length > 0 ? `
                        <div class="alert alert-info">
                            <strong>Risk Factors:</strong><br>
                            ‚Ä¢ ${result.risk_factors.join('<br>‚Ä¢ ')}
                        </div>
                    ` : ''}
                    
                    <div class="mt-3">
                        <button class="btn btn-success w-100" onclick="addToWatchlist('${ticker}')">
                            <i class="fas fa-star"></i> Add to Watchlist
                        </button>
                    </div>
                `;
                
            } catch (error) {
                console.error('Error running AI analysis:', error);
                document.getElementById('aiAnalysisResults').innerHTML = `
                    <div class="alert alert-danger">
                        <i class="fas fa-exclamation-circle"></i> Error running AI analysis: ${error.message}
                    </div>
                `;
            }
        }
        
        function showAlert(message, type = 'info') {
            const alertContainer = document.getElementById('alertContainer');
            const alertId = 'alert-' + Date.now();
            
            const alert = document.createElement('div');
            alert.className = `alert alert-${type} alert-dismissible fade show`;
            alert.innerHTML = `
                ${message}
                <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
            `;
            
            alertContainer.appendChild(alert);
            
            // Auto-remove after 5 seconds
            setTimeout(() => {
                if (alert.parentNode) {
                    alert.remove();
                }
            }, 5000);
        }
        
        function addToWatchlist(ticker) {
            showAlert(`Added ${ticker} to watchlist`, 'success');
            // Here you would typically make an API call to add to watchlist
        }

        // ... (keep all the existing functions: fetchStockData, renderTable, renderChart, etc.)
        // [Include all the previous JavaScript functions here]
// Add refresh functionality
async function refreshData() {
    showAlert('Refreshing data...', 'info');
    
    try {
        // Manual refresh endpoint (you'll need to add this to your main.py)
        const response = await fetch(`${API_BASE_URL}/api/refresh`, {
            method: 'POST'
        });
        
        if (response.ok) {
            showAlert('Data refresh started! This may take a few minutes.', 'success');
            // Reload the page after 2 seconds
            setTimeout(() => {
                location.reload();
            }, 2000);
        } else {
            showAlert('Refresh failed. Please try again.', 'danger');
        }
    } catch (error) {
        showAlert('Refresh error: ' + error.message, 'danger');
    }
}

// Add refresh button to your HTML (in the header section):
// <button class="btn btn-warning" onclick="refreshData()">
//     <i class="fas fa-sync-alt"></i> Refresh Data
// </button>

    </script>
</body>
</html>